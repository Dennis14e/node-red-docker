name: Build images

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_DATE: unknown
      BUILD_VERSION: unknown
      NODE_RED_VERSION: unknown
      DOCKER_REPO: dennis14e/node-red
      DOCKER_TAGS: unknown
      DOCKER_PUSH: false
      TARGET: nodered/node-red-dev
      PLATFORMS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x
      TAG_SUFFIX: default
    strategy:
      fail-fast: false
      matrix:
        OS:
          - alpine
          - buster
        NODE_VERSION:
          - 10
          - 12
          - 14
        TAG_SUFFIX:
          - default
          - minimal
    steps:
      - name: Set TARGET environment variable
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "TARGET=nodered/node-red" >> $GITHUB_ENV

      - name: Set BUILD_DATE environment variable
        run: echo "BUILD_DATE=$(date +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

      - name: Set BUILD_VERSION environment variable
        run: echo "BUILD_VERSION=${{ github.run_id }}" >> $GITHUB_ENV

      - name: Set TAG_SUFFIX environment variable
        run: |
          TAG_SUFFIX="-${{ matrix.TAG_SUFFIX }}"
          [ "$TAG_SUFFIX" = "-default" ] && TAG_SUFFIX=""
          echo "TAG_SUFFIX=$TAG_SUFFIX" >> $GITHUB_ENV

      - name: Set DOCKER_PUSH if the origin is this repository
        if: github.ref == 'refs/heads/master'
        run: echo "DOCKER_PUSH=true" >> $GITHUB_ENV

      - name: Remove linux/arm/v6 from buster build
        if: matrix.OS == 'buster'
        run: echo "PLATFORMS=${{ env.PLATFORMS }}" | sed -e 's/linux\/arm\/v6//g' | sed -e 's/,,/,/g' | sed -e 's/,$//g' >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Node-RED version
        run: echo "NODE_RED_VERSION=$(jq .dependencies.\"node-red\" package.json | sed -e 's/"//g')" >> $GITHUB_ENV

      - name: Set Docker tags (global)
        run: |
          DOCKER_TAGS="${{ env.DOCKER_REPO }}:v${{ env.NODE_RED_VERSION }}-${{ matrix.OS }}-${{ matrix.NODE_VERSION }}${{ env.TAG_SUFFIX }}"
          echo "DOCKER_TAGS=$DOCKER_TAGS" >> $GITHUB_ENV

      - name: Set Docker tags (alpine)
        if: matrix.OS == 'alpine'
        run: |
          DOCKER_TAGS="${{ env.DOCKER_TAGS }},${{ env.DOCKER_REPO }}:v${{ env.NODE_RED_VERSION }}-${{ matrix.NODE_VERSION }}${{ env.TAG_SUFFIX }}"
          [ "${{ matrix.TAG_SUFFIX }}" = "minimal" ] && DOCKER_TAGS="$DOCKER_TAGS,${{ env.DOCKER_REPO }}:v${{ env.NODE_RED_VERSION }}-${{ matrix.NODE_VERSION }},${{ env.DOCKER_REPO }}:latest-${{ matrix.NODE_VERSION }}"
          [ "${{ matrix.TAG_SUFFIX }}" = "minimal" ] && [ ${{ matrix.NODE_VERSION }} -eq 12 ] && DOCKER_TAGS="$DOCKER_TAGS,${{ env.DOCKER_REPO }}:v${{ env.NODE_RED_VERSION }},${{ env.DOCKER_REPO }}:latest"
          echo "DOCKER_TAGS=$DOCKER_TAGS" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        if: env.DOCKER_PUSH == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.${{ matrix.OS }}
          platforms: ${{ env.PLATFORMS }}
          pull: true
          push: ${{ env.DOCKER_PUSH }}
          tags: ${{ env.DOCKER_TAGS }}
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_VERSION=${{ env.BUILD_VERSION }}
            BUILD_REF=${{ github.sha }}
            NODE_VERSION=${{ matrix.NODE_VERSION }}
            NODE_RED_VERSION=v${{ env.NODE_RED_VERSION }}
            TARGET=${{ env.TARGET }}
            TAG_SUFFIX=${{ matrix.TAG_SUFFIX }}
