name: Build stable images

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    timeout-minutes: 180
    env:
      BUILD_DATE: unknown
      BUILD_VERSION: unknown
      DOCKER_PUSH: true
      DOCKER_REPO: dennis14e/node-red
      DOCKER_TAGS: unknown
      NODE_LATEST: 14
      NODE_RED_VERSION: unknown
      PLATFORMS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x
      TAG_SUFFIX: default
    strategy:
      fail-fast: false
      matrix:
        OS:
          - alpine
          - buster
        NODE_VERSION:
          - 12
          - 14
          - 16
        TAG_SUFFIX:
          - default
          - minimal
    steps:
      - name: Set BUILD_DATE environment variable
        run: echo "BUILD_DATE=$(date +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

      - name: Set BUILD_VERSION environment variable
        run: echo "BUILD_VERSION=${{ github.run_id }}" >> $GITHUB_ENV

      - name: Set TAG_SUFFIX environment variable
        run: |
          TAG_SUFFIX="-${{ matrix.TAG_SUFFIX }}"
          [ "$TAG_SUFFIX" = "-default" ] && TAG_SUFFIX=""
          echo "TAG_SUFFIX=$TAG_SUFFIX" >> $GITHUB_ENV

      - name: Remove linux/arm/v6 from buster build
        if: matrix.OS == 'buster'
        run: echo "PLATFORMS=${{ env.PLATFORMS }}" | sed -e 's/linux\/arm\/v6//g' | sed -e 's/,,/,/g' | sed -e 's/,$//g' >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Get Node-RED version
        run: echo "NODE_RED_VERSION=$(jq .dependencies.\"node-red\" package.json | sed -e 's/"//g')" >> $GITHUB_ENV

      - name: Set Docker tags (global)
        run: |
          TAGS=""

          # v1.2.3-12-alpine, v1.2.3-12-alpine-minimal, v1.2.3-12-buster, v1.2.3-12-buster-minimal, v1.2.3-14-alpine, [...]
          TAGS="$TAGS,${{ env.DOCKER_REPO }}:v${{ env.NODE_RED_VERSION }}-${{ matrix.NODE_VERSION }}-${{ matrix.OS }}${{ env.TAG_SUFFIX }}"

          # latest-12-alpine, latest-12-alpine-minimal, latest-12-buster, latest-12-buster-minimal, latest-14-alpine, [...]
          TAGS="$TAGS,${{ env.DOCKER_REPO }}:latest-${{ matrix.NODE_VERSION }}-${{ matrix.OS }}${{ env.TAG_SUFFIX }}"

          echo "DOCKER_TAGS=$TAGS" >> $GITHUB_ENV

      - name: Set Docker tags (latest)
        if: matrix.NODE_VERSION == env.NODE_LATEST
        run: |
          TAGS="${{ env.DOCKER_TAGS }}"

          # v1.2.3-alpine, v1.2.3-alpine-minimal, v1.2.3-buster, v1.2.3-buster-minimal
          # latest-alpine, latest-alpine-minimal, latest-buster, latest-buster-minimal
          TAGS="$TAGS,${{ env.DOCKER_REPO }}:v${{ env.NODE_RED_VERSION }}-${{ matrix.OS }}${{ env.TAG_SUFFIX }}"
          TAGS="$TAGS,${{ env.DOCKER_REPO }}:latest-${{ matrix.OS }}${{ env.TAG_SUFFIX }}"

          echo "DOCKER_TAGS=$TAGS" >> $GITHUB_ENV

      - name: Set Docker tags (alpine)
        if: matrix.OS == 'alpine'
        run: |
          TAGS="${{ env.DOCKER_TAGS }}"

          # v1.2.3-12, v1.2.3-12-minimal, v1.2.3-14, [...]
          TAGS="$TAGS,${{ env.DOCKER_REPO }}:v${{ env.NODE_RED_VERSION }}-${{ matrix.NODE_VERSION }}${{ env.TAG_SUFFIX }}"

          # latest-12, latest-12-minimal, latest-14, [...]
          TAGS="$TAGS,${{ env.DOCKER_REPO }}:latest-${{ matrix.NODE_VERSION }}${{ env.TAG_SUFFIX }}"

          echo "DOCKER_TAGS=$TAGS" >> $GITHUB_ENV

      - name: Set Docker tags (latest alpine)
        if: matrix.NODE_VERSION == env.NODE_LATEST && matrix.OS == 'alpine'
        run: |
          TAGS="${{ env.DOCKER_TAGS }}"

          # v1.2.3, v1.2.3-minimal, latest, latest-minimal
          TAGS="$TAGS,${{ env.DOCKER_REPO }}:v${{ env.NODE_RED_VERSION }}${{ env.TAG_SUFFIX }}"
          TAGS="$TAGS,${{ env.DOCKER_REPO }}:latest${{ env.TAG_SUFFIX }}"

          echo "DOCKER_TAGS=$TAGS" >> $GITHUB_ENV

      - name: Set up cache
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-v${{ env.NODE_RED_VERSION }}-${{ matrix.NODE_VERSION }}-${{ matrix.OS }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ env.DOCKER_REPO }}-v${{ env.NODE_RED_VERSION }}-${{ matrix.NODE_VERSION }}-${{ matrix.OS }}-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.3.0

      - name: Login to Docker Hub
        if: env.DOCKER_PUSH == 'true'
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          file: Dockerfile.${{ matrix.OS }}
          platforms: ${{ env.PLATFORMS }}
          pull: true
          push: ${{ env.DOCKER_PUSH }}
          tags: ${{ env.DOCKER_TAGS }}
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_VERSION=${{ env.BUILD_VERSION }}
            BUILD_REF=${{ github.sha }}
            NODE_VERSION=${{ matrix.NODE_VERSION }}
            NODE_RED_VERSION=v${{ env.NODE_RED_VERSION }}
            TAG_SUFFIX=${{ matrix.TAG_SUFFIX }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
