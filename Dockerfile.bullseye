ARG NODE_VERSION=14
ARG DEBIAN_FRONTEND=noninteractive


## Stage base
FROM node:${NODE_VERSION}-bullseye-slim AS base

# Install tools, create Node-RED app and data dir, add user and set rights
RUN set -ex && \
    apt-get update && \
    apt-get install -y \
        bash \
        ca-certificates \
        curl \
        git \
        nano \
        openssh-client \
        openssl \
        tzdata \
        wget && \
    mkdir -p /usr/src/node-red /data && \
    deluser --remove-home node && \
    adduser --home /usr/src/node-red --disabled-password --no-create-home --uid 1000 node-red && \
    chown -R node-red:root /data && chmod -R g+rwX /data && \
    chown -R node-red:root /usr/src/node-red && chmod -R g+rwX /usr/src/node-red

# Set work directory
WORKDIR /usr/src/node-red

# package.json contains Node-RED NPM module and node dependencies
COPY package.json .
COPY flows.json /data


## Stage build
FROM base AS build

# Install Build tools
RUN apt-get update && \
    apt-get install -y build-essential python2 python3 && \
    rm -rf /var/lib/apt/lists/* && \
    npm install --unsafe-perm --no-update-notifier --no-audit --no-fund --only=production && \
    npm uninstall node-red-node-gpio


## Stage release
FROM base AS release

ARG BUILD_DATE
ARG BUILD_VERSION
ARG BUILD_REF
ARG NODE_RED_VERSION
ARG TAG_SUFFIX=default

LABEL org.label-schema.build-date=${BUILD_DATE} \
    org.label-schema.docker.dockerfile="Dockerfile.bullseye" \
    org.label-schema.license="Apache-2.0" \
    org.label-schema.name="Node-RED" \
    org.label-schema.version=${BUILD_VERSION} \
    org.label-schema.description="Low-code programming for event-driven applications." \
    org.label-schema.url="https://nodered.org" \
    org.label-schema.vcs-ref=${BUILD_REF} \
    org.label-schema.vcs-type="Git" \
    org.label-schema.vcs-url="https://github.com/Dennis14e/node-red-docker" \
    authors="Dave Conway-Jones, Nick O'Leary, James Thomas, Raymond Mouthaan, Dennis Neufeld"

COPY --chown=node-red:root --from=build /usr/src/node-red/node_modules ./node_modules

# Copy scripts
RUN mkdir -p /app/scripts
COPY scripts/common/* scripts/bullseye/* /app/scripts/
RUN chown node-red:root /app/scripts/* && \
    chmod 775 /app/scripts/*

# Install devtools
RUN /app/scripts/install-devtools.sh

USER node-red

# Env variables
ENV NODE_RED_VERSION=$NODE_RED_VERSION \
    NODE_PATH=/usr/src/node-red/node_modules:/data/node_modules \
    FLOWS=flows.json

# ENV NODE_RED_ENABLE_SAFE_MODE=true    # Uncomment to enable safe start mode (flows not running)
# ENV NODE_RED_ENABLE_PROJECTS=true     # Uncomment to enable projects option

# Expose the listening port of Node-RED
EXPOSE 1880

# Add a healthcheck (default every 30 secs)
HEALTHCHECK CMD node /app/scripts/healthcheck.js

ENTRYPOINT ["npm", "--no-update-notifier", "--no-fund", "start", "--cache", "/data/.npm", "--", "--userDir", "/data"]
